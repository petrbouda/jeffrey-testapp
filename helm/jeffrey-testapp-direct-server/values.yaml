# Default values for jeffrey-testapp-direct-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

initContainer:
  name: jeffrey-init-container
  image: petrbouda/jeffrey-init-container:latest
  args: [ "/tmp/jeffrey/jeffrey-testapp-direct" ]
  volumeMounts:
    - name: jeffrey-vol
      mountPath: "/tmp/jeffrey"

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image: petrbouda/jeffrey-testapp-server:latest
pullPolicy: Always

command: ["bash", "-c", "source /tmp/jeffrey/jeffrey-testapp-direct/.env ; java -jar /work/runner.jar"]
args: []

containerPort: 8080

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 5

readinessProbe:
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 5

volumes:
  - name: jeffrey-testapp-direct-server-configmap
    configMap:
      name: jeffrey-testapp-direct-server-configmap
      items:
        - key: application.properties
          path: application.properties
  - name: jeffrey-vol
    persistentVolumeClaim:
      claimName: jeffrey-pvc

volumeMounts:
  - name: jeffrey-testapp-direct-server-configmap
    mountPath: /app/config
    readOnly: true
  - name: jeffrey-vol
    mountPath: "/tmp/jeffrey"

env:
  - name: SPRING_CONFIG_LOCATION
    value: /app/config/application.properties
  - name: JDK_JAVA_OPTIONS
    value: -agentpath:/usr/lib/async-profiler/lib/libasyncProfiler.so=start,event=ctimer,wall=10ms,loop=5m,chunksize=5m,jfrsync=default,file=%{JEFFREY_PROFILE_DIR}/profile-%t.jfr

nodeSelector: {}

tolerations: []

affinity: {}
